diff --git a/redirect.services.yml b/redirect.services.yml
index 87258ff..6644892 100644
--- a/redirect.services.yml
+++ b/redirect.services.yml
@@ -23,7 +23,7 @@ services:
       - { name: event_subscriber }
   redirect.route_normalizer_request_subscriber:
     class: Drupal\redirect\EventSubscriber\RouteNormalizerRequestSubscriber
-    arguments: ['@url_generator', '@path.matcher', '@config.factory', '@redirect.checker', '@path_alias.manager', '@path.current']
+    arguments: ['@url_generator', '@path.matcher', '@config.factory', '@redirect.checker', '@language_manager', '@path_alias.manager', '@path.current']
     tags:
       - { name: event_subscriber }
   redirect.route_subscriber:
diff --git a/src/EventSubscriber/RedirectRequestSubscriber.php b/src/EventSubscriber/RedirectRequestSubscriber.php
index 7ff815f..8ccb266 100644
--- a/src/EventSubscriber/RedirectRequestSubscriber.php
+++ b/src/EventSubscriber/RedirectRequestSubscriber.php
@@ -6,6 +6,7 @@ use Drupal\Core\Cache\CacheableMetadata;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
+use Drupal\Core\Language\LanguageInterface;
 use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\PathProcessor\InboundPathProcessorInterface;
 use Drupal\Core\Routing\TrustedRedirectResponse;
@@ -146,7 +147,7 @@ class RedirectRequestSubscriber implements EventSubscriberInterface {
     $this->context->fromRequest($request);
 
     try {
-      $redirect = $this->redirectRepository->findMatchingRedirect($path, $request_query, $this->languageManager->getCurrentLanguage()->getId());
+      $redirect = $this->redirectRepository->findMatchingRedirect($path, $request_query, $this->languageManager->getCurrentLanguage(LanguageInterface::TYPE_URL)->getId());
     }
     catch (RedirectLoopException $e) {
       \Drupal::logger('redirect')->warning('Redirect loop identified at %path for redirect %rid', ['%path' => $e->getPath(), '%rid' => $e->getRedirectId()]);
diff --git a/src/EventSubscriber/RouteNormalizerRequestSubscriber.php b/src/EventSubscriber/RouteNormalizerRequestSubscriber.php
index 4cf6cfd..f74abe6 100644
--- a/src/EventSubscriber/RouteNormalizerRequestSubscriber.php
+++ b/src/EventSubscriber/RouteNormalizerRequestSubscriber.php
@@ -3,6 +3,8 @@
 namespace Drupal\redirect\EventSubscriber;
 
 use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Language\LanguageInterface;
+use Drupal\Core\Language\LanguageManagerInterface;
 use Drupal\Core\Path\CurrentPathStack;
 use Drupal\Core\Path\PathMatcherInterface;
 use Drupal\Core\Routing\RequestHelper;
@@ -45,6 +47,13 @@ class RouteNormalizerRequestSubscriber implements EventSubscriberInterface {
    */
   protected $pathMatcher;
 
+  /**
+   * The language manager service
+   *
+   * @var Drupal\Core\Language\LanguageManagerInterface
+   */
+  protected $languageManager;
+
   /**
    * The redirect checker service.
    *
@@ -63,15 +72,18 @@ class RouteNormalizerRequestSubscriber implements EventSubscriberInterface {
    *   The config.
    * @param \Drupal\redirect\RedirectChecker $redirect_checker
    *   The redirect checker service.
+   * @param \Drupal\Core\Language\LanguageManagerInterface $language_manager
+   *   The language manager service.
    * @param \Drupal\path_alias\AliasManagerInterface|null $aliasManager
    *   The alias manager.
    * @param \Drupal\Core\Path\CurrentPathStack|null $currentPath
    *   The current path service.
    */
-  public function __construct(UrlGeneratorInterface $url_generator, PathMatcherInterface $path_matcher, ConfigFactoryInterface $config, RedirectChecker $redirect_checker, protected ?AliasManagerInterface $aliasManager = NULL, protected ?CurrentPathStack $currentPath = NULL) {
+  public function __construct(UrlGeneratorInterface $url_generator, PathMatcherInterface $path_matcher, ConfigFactoryInterface $config, RedirectChecker $redirect_checker, LanguageManagerInterface $language_manager, protected ?AliasManagerInterface $aliasManager = NULL, protected ?CurrentPathStack $currentPath = NULL) {
     $this->urlGenerator = $url_generator;
     $this->pathMatcher = $path_matcher;
     $this->redirectChecker = $redirect_checker;
+    $this->languageManager = $language_manager;
     $this->config = $config->get('redirect.settings');
   }
 
@@ -113,7 +125,10 @@ class RouteNormalizerRequestSubscriber implements EventSubscriberInterface {
 
       // Don't pass in the query here using $request->query->all()
       // since that can potentially modify the query parameters.
-      $options = ['absolute' => TRUE];
+      $options = [
+        'absolute' => TRUE,
+        'language' => $this->languageManager->getCurrentLanguage(LanguageInterface::TYPE_URL),
+      ];
       $redirect_uri = $this->urlGenerator->generateFromRoute($route_name, [], $options);
 
       // Strip off query parameters added by the route such as a CSRF token.
